// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  User
}

enum Gender {
  male
  female
}

enum NftCategory {
  basketball
  boxing
  mma
  hockey
}

model Avatar {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  userId  String @unique @db.ObjectId
  name  String
  description String
  imgUrl  String
  price Float
  user User @relation(fields: [userId], references: [id])
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName String
  email String @unique
  username  String @unique
  password  String
  gender Gender @default(male)
  birthday  DateTime
  wallet Float
  about String
  role Role @default(User)
  avatar Avatar?
  nft Nft?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Nft {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String
  imgUrl String
  price Float
  userId  String @unique @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  category NftCategory
  nftComment Comment[]
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  commentText String
  nftId String @db.ObjectId
  nft Nft @relation(fields: [nftId], references: [id])
  userId String @db.ObjectId
}